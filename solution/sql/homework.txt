 1. Display unique Jobs from employee table
 2. List the 'clerk' salarys in descending order within each department
 3. Display the name and hiredate of all 'manager's
 4. List the emp who are either ‘CLERK’ or ‘ANALYST’ in the desc order
 5. List the emps whose annul sal ranging from 22000 and 45000
 6. List all the emps EXCEPT ‘president’ & ‘manager’ in asc order of salaries
 7. List the details of the emps whose salaries more than the employee BLAKE
 8. List the details of the emps whose job is same as ALLEN.
 9. List the emps whose Sal is same as FORD or SMITH in desc order of Sal.
 10. List the emps who are senior to their own MGRs
 11. Find the highest paid employee of EACH department.
 12. List the employee name with their department name
 13. List the department without employees
 14. Display the 2nd highest salary of all employees (TOP or LIMIT)
 15. Display the 3rd highest salary of all employees
 16. Find the total salary paid to each Job type
 17. Find the average salary paid to each department
 18. Find the average salary paid to each department, show only when average is higher than 1000;  (GROUP BY + HAVING)
 19. Display number of emps of each job type in each department along with department name
 20. List the dept name and location in which at least two emps are working.
 21. Display department name, location, number of emps where at least two emps are ‘CLERK’
 22. Find the department that has maximum number of employees
 23. List employees whose names contains letter 'A'
 24. List the emps those who joined in company before 15th of the month.
 25. Find the mean salary paid to each department, show only when mean salary is higher than 1000
 26. Display emp information in format of "SMITH(clerk)"
 27. Find all the emps and their salaries who earn minimum salary in their department, display result in salary ascending order
 28. Find out the most recently hired emps in each dept order by hiredate
 29. List the emps who joined in year 81.
 30. Consider hiredate before 05-01-1981 as senior, after it as junior, count the number of seniors and juniors in each department. Your result should look like, department name, senior count, junior count
 31. Write a Stored Procedure spTotalSalary - it's input is department name, output should be the total salary of the department.
 32. Write a JDBC program to get List of Employees based on input Job type use Statement
 33. Write a JDBC program to get List of Employees based on input Job type use PreparedStatement


#  1. Display unique Jobs from employee table
SELECT DISTINCT empid
FROM employee;

#  2. List the 'clerk' salarys in descending order within each department
SELECT salary, job, deptid
FROM employee
WHERE job = "CLERK"
GROUP BY deptid, salary
ORDER BY salary DESC;


#  3. Display the name and hiredate of all 'manager's
SELECT name, hiredate
FROM employee
WHERE job = "MANAGER";

#  4. List the emp who are either ‘CLERK’ or ‘ANALYST’ in the desc order
SELECT *
FROM employee
WHERE job = "CLERK"
   OR job = "ANALYST"
ORDER BY job DESC;

#  5. List the emps whose annul sal ranging from 22000 and 45000
SELECT *
FROM employee
WHERE (salary * 12) BETWEEN 22000 AND 45000;

#  6. List all the emps EXCEPT ‘president’ & ‘manager’ in asc order of salaries
SELECT *
FROM employee
WHERE job != "PRESIDENT"
  AND job != "MANAGER"
ORDER BY salary;

#  7. List the details of the emps whose salaries more than the employee BLAKE
SELECT *
FROM employee
WHERE salary > (SELECT salary FROM employee WHERE name = "BLAKE");

#  8. List the details of the emps whose job is same as ALLEN.
SELECT *
FROM employee
WHERE job = (SELECT job FROM employee WHERE name = "ALLEN");

#  9. List the emps whose Sal is same as FORD or SMITH in desc order of Sal.
SELECT *
FROM employee
WHERE salary = (SELECT salary FROM employee WHERE name = "FORD")
   OR salary = (SELECT salary FROM employee WHERE name = "SMITH")
ORDER BY salary DESC;

#  10. List the emps who are senior to their own MGRs
SELECT e.empid, e.name, e.job, e.manager, e.hiredate, e.salary, e.deptid
FROM employee e
         JOIN employee m
WHERE m.empid = e.manager
  AND m.hiredate > e.hiredate;

#  11. Find the highest paid employee of EACH department.
SELECT deptid, MAX(salary) as max
FROM employee
GROUP BY deptid;

#  12. List the employee name with their department name
SELECT d.name as Department, e.name as Employee
FROM department d
         INNER JOIN employee e ON d.deptid = e.deptid
ORDER BY d.name;

#  13. List the department without employees
SELECT d.name as "Department Name"
FROM department d
WHERE NOT EXISTS(SELECT * FROM employee e WHERE d.deptid = e.deptid);

#  14. Display the 2nd highest salary of all employees (TOP or LIMIT)
SELECT MAX(salary)
FROM employee
WHERE salary NOT IN (SELECT MAX(salary) FROM employee);

SELECT salary
FROM employee
ORDER BY salary DESC
limit 1, 1;

#  15. Display the 3rd highest salary of all employees
SELECT salary
FROM employee
ORDER BY salary DESC
limit 2, 1;

#  16. Find the total salary paid to each Job type
SELECT job, SUM(salary)
FROM employee
GROUP BY job;

#  17. Find the average salary paid to each department
SELECT d.name, AVG(e.salary)
FROM department d
         JOIN employee e ON d.deptid = e.deptid
GROUP BY d.name;

#  18. Find the average salary paid to each department, show only when average is higher than 1000;  (GROUP BY + HAVING)
SELECT d.name, AVG(e.salary) as average
FROM department d
         JOIN employee e ON d.deptid = e.deptid
GROUP BY d.name
HAVING AVG(e.salary) > 1000;

#  19. Display number of emps of each job type in each department along with department name
SELECT d.name, e.job, COUNT(*) as count
FROM employee e
         INNER JOIN department d on e.deptid = d.deptid
GROUP BY d.name, e.job
ORDER BY d.name;

#  20. List the dept name and location in which at least two emps are working.
SELECT d.name, d.loc
FROM employee e
         INNER JOIN department d on e.deptid = d.deptid
GROUP BY d.name, d.loc
HAVING COUNT(*) >= 2;

#?  21. Display department name, location, number of emps where at least two emps are ‘CLERK’
SELECT d.name, d.loc, COUNT(*) as count, e.job
FROM employee e
         INNER JOIN department d on e.deptid = d.deptid
GROUP BY d.name, d.loc, e.job
HAVING COUNT(e.job = "CLERK") >= 2;

#  22. Find the department that has maximum number of employees
SELECT d.name, COUNT(*) as count
FROM employee e
         INNER JOIN department d on e.deptid = d.deptid
GROUP BY d.name
ORDER BY count DESC
LIMIT 1;

#  23. List employees whose names contains letter 'A'
SELECT *
FROM employee
WHERE name LIKE '%A%';

#  24. List the emps those who joined in company before 15th of the month.
SELECT *
FROM employee
WHERE dayofmonth(hiredate) < 15;

#  25. Find the mean salary paid to each department, show only when mean salary is higher than 1000
SELECT d.name, AVG(e.salary) as average
FROM employee e
         INNER JOIN department d on e.deptid = d.deptid
GROUP BY d.name
HAVING average > 1000
ORDER BY d.name;

#?  26. Display emp information in format of "SMITH(clerk)"
SELECT name | '(' | LOWER(job) | ')' AS EMPLOYEE
FROM employee;

#  27. Find all the emps and their salaries who earn minimum salary in their department, display result in salary ascending order
SELECT *
FROM employee
WHERE salary IN (SELECT MIN(salary) FROM employee GROUP BY deptid)
ORDER BY salary;

#  28. Find out the most recently hired emps in each dept order by hiredate
SELECT *
FROM employee e
WHERE hiredate IN (SELECT MAX(hiredate) FROM employee WHERE e.deptid = deptid)
ORDER BY hiredate;

#  29. List the emps who joined in year 81.
SELECT *
FROM employee
WHERE year(hiredate) = 1981;

#  30. Consider hiredate before 05-01-1981 as senior, after it as junior, count the number of seniors and juniors in each department. Your result should look like, department name, senior count, junior count

#  31. Write a Stored Procedure spTotalSalary - it's input is department name, output should be the total salary of the department.

#  32. Write a JDBC program to get List of Employees based on input Job type use Statement

#  33. Write a JDBC program to get List of Employees based on input Job type use PreparedStatement
